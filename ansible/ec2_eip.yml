---
- name: Allocate and attach EIP to EC2
  hosts: localhost
  connection: local
  gather_facts: false

  collections:
    - amazon.aws

  vars:
    region: us-east-1
    key_name: key1
    instance_type: t2.micro
    ami_id: ami-020cba7c55df1f615
    subnet_id: subnet-0ba8515299db5da39
    security_group: sg-06de367a87ff03102

  tasks:

    - name: Launch EC2 instance
      amazon.aws.ec2_instance:
        name: "EIP-Attached"
        key_name: "{{ key_name }}"
        instance_type: "{{ instance_type }}"
        image:
          id: "{{ ami_id }}"
        region: "{{ region }}"
        wait: true
        count: 1
        network:
          assign_public_ip: false
          subnet_id: "{{ subnet_id }}"
          security_group_id: "{{ security_group }}"
        tags:
          Environment: Dev
      register: ec2_result

    - name: Display instance info
      debug:
        var: ec2_result.instances[0]

    - name: Gather all EIPs in the region
      amazon.aws.ec2_eip_info:
        region: "{{ region }}"
      register: eip_info

    - name: Set first unassociated EIP if available
      set_fact:
        free_eip: "{{ item.public_ip }}"
      when: item.instance_id is not defined and (free_eip is not defined)
      loop: "{{ eip_info.addresses }}"

    - name: Allocate new EIP if no free one found
      amazon.aws.ec2_eip:
        region: "{{ region }}"
        in_vpc: true
        state: present
      register: eip_result
      when: free_eip is not defined

    - name: Set EIP to associate
      set_fact:
        final_eip: "{{ free_eip | default(eip_result.eip.public_ip) }}"

    - name: Associate EIP with EC2 instance
      amazon.aws.ec2_eip:
        region: "{{ region }}"
        device_id: "{{ ec2_result.instances[0].instance_id }}"
        public_ip: "{{ final_eip }}"
        state: present

    - name: Show final EIP info
      debug:
        msg: "Elastic IP {{ final_eip }} has been attached to instance {{ ec2_result.instances[0].instance_id }}"

